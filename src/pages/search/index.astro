---
import Layout from "@/layouts/Layout.astro";
import "@/pages/search/index.scss";
import { data } from "@/pages/search/shopData.ts";
---

<Layout>
  <div class="filter">
    <div class="filter__checkboxs">
      <div>
        <input type="checkbox" id="tokyo" data-checkbox value="東京" />
        <label for="tokyo">東京</label>
      </div>
      <div>
        <input type="checkbox" id="tochigi" data-checkbox value="栃木" />
        <label for="tochigi">栃木</label>
      </div>
      <div>
        <input type="checkbox" id="chiba" data-checkbox value="千葉" />
        <label for="chiba">千葉</label>
      </div>
      <div>
        <input type="checkbox" id="fukuoka" data-checkbox value="福岡" disabled class="filter__checkbox"/>
        <label for="fukuoka">福岡</label>
      </div>
    </div>
    <button type="button" data-filter class="filter__button" disabled>絞り込む</button>
    <button type="button" data-display-all class="filter__button is-hidden">全表示する</button>
  </div>

  <div class="search is-active" data-tab-content="list">
    {
      data.map((item, index) => (
        <div
          class="search__item"
          data-shop-modal="open"
          data-slideid={index}
          data-area={item.area}
        >
          <img src="" alt="" width="300" height="300" class="search__shopImg" />
          <h3 class="search__shopName">{item.shopName}</h3>
          <span class="search__location">{item.area}</span>
        </div>
      ))
    }
    <dialog class="shopModal" data-shop-modal="dialog">
      <button class="shopModal__closeButton" data-shop-modal="close"
        >閉じる</button
      >
      <div class="shopModal__slider">
        <div class="shopModal__slideWrapper" data-shop-modal="slideWrapper">
          {
            data.map((item, index) => (
              <div class="shopModal__slide" data-shop-modal="slide">
                <div class="shopModal__content">
                  <img src="" alt="" width="250" height="250" loading="lazy" />
                  <div class="shopModal__description">
                    <span>{item.shopName + index}</span>
                    <span>{item.area}</span>
                    <p>{item.description}</p>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
      <button
        class="shopModal__nextButton shopModal__slideButton"
        data-shop-modal="next"></button>
      <button
        class="shopModal__prevButton shopModal__slideButton"
        data-shop-modal="prev"></button>
    </dialog>
  </div>

  <script>
    import { getCheckedCheckboxValues } from "@/pages/search/initCheckbox.ts";

    const filterButton = document.querySelector("[data-filter]");
    const displayAllButton = document.querySelector("[data-display-all]");
    const checkboxes =
      document.querySelectorAll<HTMLInputElement>("[data-checkbox]");

    filterButton?.addEventListener("click", () => {
      const filteredAreas = getCheckedCheckboxValues("[data-checkbox]");
      updateDisplayShops(filteredAreas);

      if(displayAllButton?.classList.contains("is-hidden")) {
        displayAllButton?.classList.remove("is-hidden");
      }
    });

    checkboxes?.forEach((checkbox) => {
      checkbox.addEventListener("change", () => {
        if (
          Array.from(checkboxes).filter((checkbox) => checkbox.checked)
            .length === 0
        ) {
          filterButton?.setAttribute("disabled", "");
        } else {
          filterButton?.removeAttribute("disabled");
        }
      });
    });

    const updateDisplayShops = (filteredAreas: string[]) => {
      const shopButtonElements = document.querySelectorAll<HTMLElement>(
        '[data-shop-modal="open"]'
      );

      Array.from(shopButtonElements).forEach((element) => {
        if (!element.dataset.area) return;
        if (filteredAreas.includes(element.dataset.area)) {
          console.log(element.dataset.area);
          element.classList.remove("is-not-display");
        } else {
          element.classList.add("is-not-display");
        }
      });
    };



    // スライダーのファクトリー関数（アロー関数式）
    const createSlider = (wrapperSelector: string, slideSelector: string) => {
      let currentIndex = 0;
      const slideWrapper = document.querySelector<HTMLElement>(wrapperSelector);
      const slides = document.querySelectorAll(slideSelector);
      const totalSlides = slides.length;

      const goTo = (index: number) => {
        currentIndex = index;
        update();
      };

      const next = () => {
        currentIndex = (currentIndex + 1) % totalSlides;
        update();
      };

      const prev = () => {
        currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
        update();
      };

      const update = () => {
        if (slideWrapper) {
          slideWrapper.style.transform = `translateX(${-currentIndex * 100}%)`;
        }
      };

      return { goTo, next, prev, update };
    };

    // モーダルのファクトリー関数（アロー関数式）
    const createModal = (dialogSelector: string, closeSelector: string) => {
      const dialog = document.querySelector<HTMLDialogElement>(dialogSelector);
      const closeButton = document.querySelector(closeSelector);

      const open = () => {
        dialog?.showModal();
      };

      const close = () => {
        dialog?.close();
      };

      closeButton?.addEventListener("click", close);
      dialog?.addEventListener("click", (e) => {
        if (e.target === dialog) close();
      });

      return { open, close };
    };

    // --- 初期化・連携 ---
    (() => {
      const slider = createSlider(
        '[data-shop-modal="slideWrapper"]',
        '[data-shop-modal="slide"]'
      );
      const modal = createModal(
        '[data-shop-modal="dialog"]',
        '[data-shop-modal="close"]'
      );

      // モーダルトリガー
      document
        .querySelectorAll<HTMLElement>('[data-shop-modal="open"]')
        .forEach((toggle) => {
          toggle.addEventListener("click", () => {
            const slideId = Number(toggle.dataset.slideid) || 0;
            slider.goTo(slideId);
            modal.open();
          });
        });

      // スライドボタン
      document
        .querySelector('[data-shop-modal="next"]')
        ?.addEventListener("click", slider.next);
      document
        .querySelector('[data-shop-modal="prev"]')
        ?.addEventListener("click", slider.prev);
    })();
  </script>
</Layout>
