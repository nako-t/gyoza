---
// 表示するリストアイテムの配列を作成
const items = Array.from(
  { length: 10 },
  (_, index) => `リストアイテム ${index + 1}`
);
// 初期表示する数
const initialVisibleCount = 3;
---

<div class="accordion-container">
  <ul class="list">
    {
      items.map((item, index) => (
        <li class={index >= initialVisibleCount ? "hidden" : ""}>{item}</li>
      ))
    }
  </ul>
  <button class="toggle-button">すべて表示</button>
</div>

<style>
  .accordion-container {
    max-width: 600px;
    margin: 0 auto;
  }

  .list {
    list-style: none;
    padding: 0;
    margin: 0;
    overflow: hidden;
  }

  .list li {
    padding: 1rem;
    border-bottom: 1px solid #eee;
    background-color: white;
  }

  .hidden {
    max-height: 0;
    opacity: 0;
    transition: all 0.5s ease-in-out;
  }

  .list.expanded .hidden {
    max-height: 60px;
    opacity: 1;
  }

  .toggle-button {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .toggle-button:hover {
    background-color: #0056b3;
  }
</style>

<script>
  const toggleButton = document.querySelector(".toggle-button");
  const list = document.querySelector(".list");

  if (toggleButton && list) {
    toggleButton.addEventListener("click", () => {
      list.classList.toggle("expanded");
      toggleButton.textContent = list.classList.contains("expanded")
        ? "閉じる"
        : "すべて表示";
    });
  }
</script>
